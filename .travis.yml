# Request for Ubuntu 16.04 Trusty VM
sudo: true
dist: xenial

# This is comment to easer chagne CXX and CC flags
#language: cpp

cache:
  apt: true

addons:
    apt:
      update: true
      packages:
      - cmake
      - git
    homebrew:
      packages:
      - cmake
      - git
      update: true

matrix:
  include:
    - name: "gcc 7"
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - CC=gcc-7
        - CXX=g++-7
        - SQLITE_ORM_OMITS_CODECVT=OFF
    - name: "clang default"
      compiler: clang
      env:
        - CC=clang
        - CXX=clang++
        - SQLITE_ORM_OMITS_CODECVT=ON
    - name: "osx clang"
      addons:
        homebrew:
          packages:
            - llvm
          update: true
      compiler: clang
      os: osx
      osx_image: xcode10.2
      env:
        - CPPFLAGS="-I/usr/local/opt/llvm/include"
        - LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
        - CPATH=/usr/local/opt/llvm/include
        - LIBRARY_PATH=/usr/local/opt/llvm/lib
        - LD_LIBRARY_PATH=/usr/local/opt/llvm/lib
        - CC=/usr/local/opt/llvm/bin/clang
        - CXX=/usr/local/opt/llvm/bin/clang++
        - VCPKG_ALLOW_APPLE_CLANG=1
        - SQLITE_ORM_OMITS_CODECVT=ON
    - name: "osx gcc"
      addons:
        homebrew:
          packages:
            - gcc6
          update: true
      compiler: gcc
      os: osx
      osx_image: xcode10.1
      env:
        - CC=gcc-6
        - CXX=g++-6
        - SQLITE_ORM_OMITS_CODECVT=OFF

before_install:
  # coveralls test coverage:
  - if [[ "$CXX" == "g++" ]]; then pip install --user cpp-coveralls ; fi

# scripts to run before build
before_script:
  - if [[ "$CXX" == *"clang"* ]]; then clang --version ; fi
  - if [[ "$CXX" == *"clang"* && "$TRAVIS_OS_NAME" == "osx" ]]; then chmod +x prepare-osx-with-clang.sh ; ./prepare-osx-with-clang.sh ; fi 
  - chmod +x build.sh
  - cd third_party
  - git clone https://github.com/Microsoft/vcpkg.git vcpkg
  - cd vcpkg
  - chmod +x bootstrap-vcpkg.sh
  - if [[ "$CXX" == *"clang"* && "$TRAVIS_OS_NAME" == "osx" ]]; then ./bootstrap-vcpkg.sh --allowAppleClang ; else ./bootstrap-vcpkg.sh ; fi
  - chmod +x vcpkg
  - ./vcpkg install gtest
  - cd ../..
  - mkdir compile
  - cd compile
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=../third_party/vcpkg/scripts/buildsystems/vcpkg.cmake -DSQLITE_ORM_OMITS_CODECVT="$SQLITE_ORM_OMITS_CODECVT" ..

# build examples, and run tests (ie make & make test)
script:
  - cmake --build . --config Debug
  - ctest --verbose --output-on-failure -C Debug

# generate and publish GCov coveralls results
after_success:
  - if [[ "$CXX" == "g++" ]]; then coveralls --root .. -e examples -e googletest -e sqlite3 -e tests -E ".*feature_tests.*" -E ".*CompilerId.*" --gcov-options '\-lp' ; fi
