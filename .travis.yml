# ITNOA
# Copyright (c) 2012-2019 Sebastien Rombauts (sebastien.rombauts@gmail.com)

# request for Ubuntu 16.04 Trusty VM
sudo: true
dist: xenial
#language: cpp

cache:
  apt: true

addons:
    apt:
      update: true
      packages:
      - cmake
      - git
    homeberaw:
      packages:
      - cmake
      - git

matrix:
  include:
    - name: "gcc 7"
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - CC=gcc-7
        - CXX=g++-7
    - name: "clang default"
      compiler: clang
      env:
        - CC=clang
        - CXX=clang++
    - name: "osx"
      compiler: clang
      os: osx
      env:
        - CC=clang
        - CXX=clang


before_install:
  # coveralls test coverage:
  - if [[ "$CXX" == "g++" ]]; then pip install --user cpp-coveralls ; fi

# scripts to run before build
before_script:
  - chmod +x build.sh
  - cd third_party
  - git clone https://github.com/Microsoft/vcpkg.git vcpkg
  - cd vcpkg
  - chmod +x bootstrap-vcpkg.sh
  - ./bootstrap-vcpkg.sh
  - chmod +x vcpkg
  - ./vcpkg install gtest
  - cd ../..
  - mkdir compile
  - cd compile
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=../third_party/vcpkg/scripts/buildsystems/vcpkg.cmake ..

# build examples, and run tests (ie make & make test)
script:
  - cmake --build . --config Debug
  - ctest --verbose --output-on-failure -C Debug

# generate and publish GCov coveralls results
after_success:
  - if [[ "$CXX" == "g++" ]]; then coveralls --root .. -e examples -e googletest -e sqlite3 -e tests -E ".*feature_tests.*" -E ".*CompilerId.*" --gcov-options '\-lp' ; fi