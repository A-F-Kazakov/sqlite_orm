# Defaults
os: linux
dist: xenial

matrix:
  include:
    - name: "gcc 7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - CC: gcc-7
        - CXX: g++-7
        - SQLITE_ORM_OMITS_CODECVT: OFF

    - name: "clang default"
      language: cpp
      compiler: clang
      env:
        - SQLITE_ORM_OMITS_CODECVT: ON

    - name: "OSX LLVM/Clang"
      os: osx
      osx_image: xcode10.2
      addons:
        homebrew:
          packages:
            - llvm
      env:
        - CPPFLAGS: "-I/usr/local/opt/llvm/include"
        - LDFLAGS: "-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
        - CPATH: /usr/local/opt/llvm/include
        - LIBRARY_PATH: /usr/local/opt/llvm/lib
        - LD_LIBRARY_PATH: /usr/local/opt/llvm/lib
        - CC: /usr/local/opt/llvm/bin/clang
        - CXX: /usr/local/opt/llvm/bin/clang++
        - SQLITE_ORM_OMITS_CODECVT: ON

    - name: "osx gcc"
      os: osx
      osx_image: xcode10.1
      addons:
        homebrew:
          packages:
            - gcc@6
          update: true
      env:
        - CC: gcc-6
        - CXX: g++-6
        - SQLITE_ORM_OMITS_CODECVT: OFF

before_install:
  # coveralls test coverage:
  - if [[ "$CXX" == "g++" ]]; then pip install --user cpp-coveralls ; fi

# scripts to run before build
before_script:
  - if [[ "$CXX" == *"clang"* ]]; then clang --version ; fi
  - if [[ "$CXX" == *"clang"* && "$TRAVIS_OS_NAME" == "osx" ]]; then chmod +x prepare-osx-with-clang.sh ; ./prepare-osx-with-clang.sh ; fi 
  - chmod +x build.sh
  - cd third_party
  - git clone https://github.com/Microsoft/vcpkg.git vcpkg
  - mv -f -t ./vcpkg ~/.cache/vcpkg/* || echo "No cached files for vcpkg."
  - cd vcpkg
  - chmod +x bootstrap-vcpkg.sh
  - if [[ ! "${CXX:-}" && "$TRAVIS_OS_NAME" == "osx" ]]; then ./bootstrap-vcpkg.sh --allowAppleClang ; else ./bootstrap-vcpkg.sh ; fi
  - chmod +x vcpkg
  - ./vcpkg install gtest
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir compile && cd compile
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=../third_party/vcpkg/scripts/buildsystems/vcpkg.cmake -DSQLITE_ORM_OMITS_CODECVT="$SQLITE_ORM_OMITS_CODECVT" ..

# build examples, and run tests (ie make & make test)
script:
  - cmake --build . --config Debug
  - ctest --verbose --output-on-failure -C Debug

# generate and publish GCov coveralls results
after_success:
  - if [[ "$CXX" == "g++" ]]; then coveralls --root .. -e examples -e googletest -e sqlite3 -e tests -E ".*feature_tests.*" -E ".*CompilerId.*" --gcov-options '\-lp' ; fi

before_cache:
- |
  # Select files for caching
  mkdir -p ~/.cache/vcpkg
  mv -u -t ~/.cache/vcpkg ${TRAVIS_BUILD_DIR}/third_party/vcpkg/installed

cache:
  directories:
  - ~/.cache
